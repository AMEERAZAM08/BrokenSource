
# ------------------------------------------------------------------------------------------------|

[package]
name = "BrokenSource"
version = "2023.4.24"
edition = "2021"
authors = ["Tremeschin"]
description = "Broken Source Software Monorepo"
repository = "https://github.com/BrokenSource/BrokenSource"

# ------------------------------------------------------------------------------------------------|

[lib]
name = "Broken"
path = "Broken/Broken.rs"

# ------------------------------------------------------------------------------------------------|

# Ardmin project
[[bin]]
name = "Ardmin"
path = "Projects/Ardmin/Ardmin.rs"

# Harper project
[[bin]]
name = "Harper"
path = "Harper/Main.rs"
required-features = [
    "egui",
    "midi",
]

# HypeWord project
[[bin]]
name = "HypeWord"
path = "Projects/HypeWord/Main.rs"
required-features = []

# PhasorFlow project
[[bin]]
name = "PhasorFlow"
path = "Projects/PhasorFlow/Main.rs"
required-features = [
    "skia",
    "ndarray"
]

# PocketSolar project
[[bin]]
name = "PocketSolar"
path = "Projects/PocketSolar/Main.rs"
required-features = [
    "egui",
    "serialport"
]

# ShaderFlow project
[[bin]]
name = "ShaderFlow"
path = "Projects/ShaderFlow/Main.rs"
required-features = [
    "egui",
    # "ndarray",
    "midi",
    "shaders",
]

# ------------------------------------------------------------------------------------------------|

[features]
cairo   = ["dep:cairo-rs"]
egui    = ["dep:egui", "dep:eframe"]
midi    = ["dep:midly", "dep:bincode"]
ndarray = ["dep:ndarray", "dep:ndarray-linalg"]
shaders = ["dep:wgpu", "dep:winit"]
skia    = ["dep:skia-safe"]

# ------------------------------------------------------------------------------------------------|

[dependencies]

# Feature: [cairo]
cairo-rs = {version="0.17.0", optional=true, features=["pdf", "png", "svg"]}

# Feature: [egui]
eframe = {version="0.19.0", optional=true, features=["persistence"]}
egui = {version="0.19.0", optional=true, features=["persistence"]}

# Feature: [midi]
midly = {version="0.5.3", optional=true}
bincode = {version="1.3.3", optional=true}

# Feature: [serialport]
serialport = {version="4.2.0", optional=true}

# Feature: [shaders]
wgpu = {version="0.15.1", optional=true}
winit = {version="0.28.1", optional=true}

# Feature: [skia]
skia-safe = {version="0.60.0", optional=true}

# Feature: [ndarray]
ndarray = {version="0.15.6", optional=true}
[target.'cfg(windows)'.dependencies]
ndarray-linalg = {version="0.16.0", optional=true, features=["netlib-static"]}
[target.'cfg(not(windows))'.dependencies]
ndarray-linalg = {version="0.16.0", optional=true, features=["intel-mkl-static"]}
[target.'cfg(all())'.dependencies]

# ------------------------------------------------------------------------------------------------|

# Math / time / iterables
libm = "0.2.5"
num = {version="0.4.0", features=["libm", "serde", "rand"]}
chrono = "0.4.22"
itertools = "0.10.5"
unordered-pair = {version="0.2.4", features=["serde"]}

# Serialization / Data Structures
toml = "0.5.9"
serde = {version="1.0.145", features=["derive"]}
serde_derive = "1.0.145"
serde_json = "1.0.86"
strum = {version="0.24.1", features=["derive"]}
strum_macros = "0.24.3"

# Logging / CLI
clap = {version="4.0.10", features=["derive", "color", "error-context", "suggestions", "usage"]}
fern = {version="0.6.1", features=["chrono", "colored", "date-based"]}
log = "0.4.17"

# # Others
lru-cache = "0.1.2"
num_cpus = "1.15.0"
rayon = "1.7.0"

# Path
tempfile = "3.3.0"
directories = "4.0.1"
glob = "0.3.1"
# rust-embed = "6.4.1" # TODO Windows icons?

# "Builder"-like syntax, derives
derive_setters = "0.1.5"
derive-new = "0.5.9"
smart-default = "0.6.0"
derivative = "2.2.0"

# String utils
str-macro = "1.0.0"
fstrings = "0.2.3"
regex = "1.7.1"

# "Global" variables
lazy_static = "1.4.0"
once_cell = "1.17.1"

# Unsorted
serde_with = "2.3.1"
rand = "0.8.5"

# ------------------------------------------------------------------------------------------------|

[profile.ultra]
inherits = "release"
panic = "abort"
opt-level = 3
strip = true
lto = true

# ------------------------------------------------------------------------------------------------|
